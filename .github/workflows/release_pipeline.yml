name: Release
on:
  push:
    tags:
      - 'v*'
jobs:
  update-release-issue:
    outputs:
      comment_id: ${{steps.save_id.outputs.id}}
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get tag name
        id: tag
        run: echo "TAG=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Get previous tag name
        id: prev-tag
        run: 
          echo "PREV_TAG=$(git describe --abbrev=0 --tags ${GITHUB_REF#refs/tags/}^)" >> $GITHUB_ENV

      - name: Get tag's author
        run: echo "TAG_AUTHOR=$(git show -s --format='%an' $TAG)" >> $GITHUB_ENV
      
      - name: Get tag's date
        run: echo "TAG_DATE=$( git log -1 --simplify-by-decoration --pretty="format:%ci" ${{env.TAG}})" >> $GITHUB_ENV
      - name: Get changelog
        run: |
          export PREV_TAG="${{env.PREV_TAG}}"
          if [[ -z "$PREV_TAG" ]]; then
            git --no-pager log --pretty=format:"- %s" ${{env.TAG}} > changelog.txt
          else
            git --no-pager log --pretty=format:"- %s" ${{env.PREV_TAG}}..${{env.TAG}} > changelog.txt
          fi
          sleep 1s
          cat changelog.txt

      - name: Find comment with existing tag
        uses: peter-evans/find-comment@v2
        id: fc
        with:
          issue-number: 5
          body-includes: "Version: ${{ env.TAG}}"

      - name: Update comment if release exists
        if: steps.fc.outputs.comment-id != ''
        id: update
        uses: peter-evans/create-or-update-comment@v3
        with:
          edit-mode: replace
          issue-number: 5
          comment-id: ${{ steps.fc.outputs.comment-id }}
          body: |
            Version: ${{env.TAG}}
            Date: ${{env.TAG_DATE}}
            Author: ${{env.TAG_AUTHOR}}
            ## Changelog
            
      - name: Create comment if no such release exists
        if: steps.fc.outputs.comment-id == ''
        id: create
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: 5
          body: |
            Version: ${{env.TAG}}
            Date: ${{env.TAG_DATE}}
            Author: ${{env.TAG_AUTHOR}}
            ## Changelog

      - name: Append changelog to created
        if: steps.fc.outputs.comment-id == ''
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ steps.create.outputs.comment-id}}
          edit-mode: append
          issue-number: 5
          body-path: changelog.txt
        
      - name: Append changelog to updated
        if: steps.fc.outputs.comment-id != ''
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ steps.update.outputs.comment-id}}
          edit-mode: append
          issue-number: 5
          body-path: changelog.txt

      - name: Save comment id to output
        id: save_id
        run: |
          id1="${{steps.create.outputs.comment-id}}"
          id2="${{steps.update.outputs.comment-id}}"
          if [[ -z "$id1" ]]; then
            echo "id=$id1" >> GITHUB_OUTPUT
          else
            echo "id=$id2" >> GITHUB_OUTPUT
          fi
        
  run-autotest:
    uses: ./.github/workflows/autotests.yml

  get-autotests-result:
    permissions: write-all
    runs-on: ubuntu-latest
    if: always()
    needs: [run-autotest, update-release-issue] 
    steps:
    - name: Put result to issue
      uses: peter-evans/create-or-update-comment@v3
      with:
        issue-number: 5
        comment-id: ${{ needs.update-release-issue.outputs.comment_id }} 
        edit-mode: append
        body: |
          ## Autotests result
          ${{needs.run-autotest.result}}

#asdfj;lasdfj;asd
#idafdfasdf